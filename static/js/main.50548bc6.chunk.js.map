{"version":3,"sources":["utils/api.js","components/Login.tsx","logo.svg","components/NavBar.tsx","components/NotFound.tsx","utils/formattingDate.ts","components/Table.tsx","components/App.tsx","index.tsx"],"names":["api","url","login","user","updateHouses","this","token","localStorage","getItem","status","getResponse","bind","res","includes","json","Promise","reject","Error","password","email","fetch","method","headers","body","JSON","stringify","username","then","Authorization","company_id","page","perPage","Login","loginHandler","history","useHistory","React","useState","setLogin","changeHandler","evt","target","name","value","className","placeholder","defaultValue","type","onChange","title","onClick","preventDefault","push","NavBar","src","logo","alt","to","exact","activeClassName","NotFound","formattingDate","date","dateObj","Date","replace","year","getFullYear","toString","month","getMonth","day","getDate","length","join","Table","data","userData","setUserData","id","address","reestrFlatCount","createdAt","infoTable","setInfoTable","useEffect","company","find","d","index","indexOf","getInfoUpdateUser","catch","err","console","error","map","info","App","setTitle","setData","getInfoForUser","path","authorizationPost","dataUser","setItem","access","firstName","resolve","message","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NA6DeA,EAPH,I,WArDV,cAKI,IAJFC,EAIC,EAJDA,IACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,KACAC,EACC,EADDA,aACC,oBACDC,KAAKJ,IAAMA,EACXI,KAAKF,KAAOA,EACZE,KAAKD,aAAeA,EACpBC,KAAKH,MAAQA,EACbG,KAAKC,MAAQC,aAAaC,QAAQ,UAAY,GAC9CH,KAAKI,OAAS,CAAC,IAAK,IAAK,IAAK,KAC9BJ,KAAKK,YAAcL,KAAKK,YAAYC,KAAKN,M,+CAG3C,SAAYO,GACV,OAAIP,KAAKI,OAAOI,SAASD,EAAIH,QACpBG,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,oDAAyBL,EAAIH,Y,+BAGrD,YAAwC,IAApBS,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC5B,OAAOC,MAAM,GAAD,OAAIf,KAAKJ,KAAT,OAAeI,KAAKH,OAAS,CACvCmB,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAU,CAAEP,WAAUQ,SAAUP,MAC1CQ,KAAKtB,KAAKK,e,4BAGf,SAAeJ,GACb,OAAOc,MAAM,GAAD,OAAIf,KAAKJ,KAAT,OAAeI,KAAKF,MAAQ,CACtCkB,OAAQ,MACRC,QAAS,CACP,eAAgB,kCAChBM,cAAc,UAAD,OAAYtB,MAE1BqB,KAAKtB,KAAKK,e,+BAGf,YAAkD,IAA9BmB,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACpC,OAAOX,MAAM,GAAD,OAAIf,KAAKJ,KAAT,OAAeI,KAAKD,cAApB,OAAmCyB,EAAnC,kBAAuDC,EAAvD,oBAAuEC,GAAW,CAC5FV,OAAQ,MACRC,QAAS,CACP,eAAgB,kCAChBM,cAAc,UAAD,OAAYvB,KAAKC,UAE/BqB,KAAKtB,KAAKK,iB,KAIL,CAAQ,CAClBT,IAAK,uCACLE,KAAM,wBACND,MAAO,SACPE,aAAc,+B,uBCLD4B,EA7CiB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3BC,EAAUC,cADoC,EAE1BC,IAAMC,SAAS,CAAElB,MAAOZ,aAAaC,QAAQ,UAAY,GAAIU,SAAU,KAF7C,mBAE7ChB,EAF6C,KAEtCoC,EAFsC,KAG9CC,EAAgB,SAACC,GACrBF,EAAS,2BAAKpC,GAAN,kBAAcsC,EAAIC,OAAOC,KAAOF,EAAIC,OAAOE,UASrD,OACE,0BAASC,UAAU,QAAnB,UACE,uCACA,uBACEC,YAAY,iCACZH,KAAK,QACLI,aAAc5C,EAAMiB,MACpB4B,KAAK,OACLC,SAAUT,IAEZ,uBACEM,YAAY,uCACZH,KAAK,WACLI,aAAc5C,EAAMgB,SACpB6B,KAAK,WACLC,SAAUT,IAEZ,wBACEQ,KAAK,SACLE,MAAM,yDACNC,QA1Bc,SAACV,GACnBA,EAAIW,iBACJlB,EAAa/B,GACVyB,MAAK,kBAAMO,EAAQkB,KAAK,SAoBzB,wECtCS,MAA0B,iCCkB1BC,EAdU,kBACvB,sBAAKT,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAOU,IAAKC,EAAMC,IAAI,SACrC,qBAAIZ,UAAU,iBAAd,UACE,oBAAIA,UAAU,gBAAd,SACE,cAAC,IAAD,CAASA,UAAU,gBAAgBa,GAAG,IAAIC,OAAK,EAACC,gBAAgB,uBAAhE,2GAEF,oBAAIf,UAAU,gBAAd,SACE,cAAC,IAAD,CAASA,UAAU,gBAAgBa,GAAG,SAASC,OAAK,EAACC,gBAAgB,uBAArE,yFCCOC,EAVY,WACzB,IAAM1B,EAAUC,cAChB,OACE,qCACE,qCACA,wBAAQY,KAAK,SAASG,QAAS,kBAAMhB,EAAQkB,KAAK,MAAlD,0H,QCISS,MAZf,SAAwBC,GACtB,IAAMC,EAAU,IAAIC,KAAKF,EAAKG,QAAQ,WAAY,KAC5CC,EAAeH,EAAQI,cAAcC,WACvCC,GAAiBN,EAAQO,WAAa,GAAGF,WACzCG,EAAcR,EAAQS,UAAUJ,WAKpC,OAHIC,EAAMI,OAAS,IAAGJ,EAAK,WAAOA,IAC9BE,EAAIE,OAAS,IAAGF,EAAG,WAAOA,IAEvB,CAACA,EAAKF,EAAOH,GAAMQ,KAAK,MC+DlBC,EA/DiB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACZxC,IAAMC,SAAc,IADR,mBACrCwC,EADqC,KAC3BC,EAD2B,OAEV1C,IAAMC,SAAc,CAAC,CACrD0C,GAAI,GACJC,QAAS,GACTC,gBAAiB,GACjBC,UAAW,IAAIlB,QAN2B,mBAErCmB,EAFqC,KAE1BC,EAF0B,KA6B5C,OAJAhD,IAAMiD,WAAU,WACdP,EAAY,CAAC,CAAEC,GAAI,EAAGrC,KAAM,KAAjB,mBAA0BkC,OACpC,CAACA,IAGF,0BAAShC,UAAU,aAAnB,UACE,oIACA,wBAAQA,UAAU,eAAeI,SAxBhB,SAACR,GACpB,GAAIA,EAAIC,OAAOE,MAAO,CACpB,IAAM2C,EAAUV,EAAKW,MAAK,SAACC,GAAD,OAAOA,EAAE9C,OAASF,EAAIC,OAAOE,SACjD8C,EAAQb,EAAKc,QAAQJ,GAC3BtF,EAAI2F,kBAAkB,CAAE9D,WAAYyD,EAAQP,GAAIjD,KAAM2D,EAAO1D,QAAS6C,EAAKH,SACxE9C,MAAK,SAACf,GAAD,OAASwE,EAAaxE,EAAIgE,SAC/BgB,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,WAEhCT,EAAa,CAAC,CACZL,GAAI,GACJC,QAAS,GACTC,gBAAiB,GACjBC,UAAW,IAAIlB,SAYjB,SACGa,EAASmB,KAAI,SAACR,GAAD,OACZ,iCAAoBA,EAAE9C,MAAT8C,EAAET,SAEnB,uBAAOnC,UAAU,QAAjB,SACE,kCACE,qBAAIA,UAAU,sCAAd,UACE,oBAAIA,UAAU,cAAd,gBACA,oBAAIA,UAAU,cAAd,4CACA,oBAAIA,UAAU,cAAd,8FACA,oBAAIA,UAAU,cAAd,0FAEDuC,EAAUa,KAAI,SAACC,GAAD,OAMb,qBAAkBrD,UAAU,aAA5B,UACE,oBAAIA,UAAU,cAAd,SAA6BqD,EAAKlB,KAClC,oBAAInC,UAAU,cAAd,SAA6BqD,EAAKjB,UAClC,oBAAIpC,UAAU,cAAd,SAA6BqD,EAAKhB,kBAClC,oBAAIrC,UAAU,cAAd,SAA6BiB,EAAeoC,EAAKf,UAAUd,gBAJpD6B,EAAKlB,gBCJXmB,EA5CO,WAAO,IAAD,EACA9D,IAAMC,SAAiB,IADvB,mBACnBY,EADmB,KACZkD,EADY,OAEF/D,IAAMC,SAAc,IAFlB,mBAEnBuC,EAFmB,KAEbwB,EAFa,KAuB1B,OATAhE,IAAMiD,WAAU,WACV9E,aAAaC,QAAQ,UACvBR,EAAIqG,eAAe9F,aAAaC,QAAQ,UACrCmB,MAAK,SAACsE,GACLG,EAAQH,EAAKrB,SAEdgB,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAR,kEAA4BF,SAE/C,IAED,sBAAKjD,UAAU,OAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,cAAC,EAAD,MAEF,sBAAMA,UAAU,UAAhB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO0D,KAAK,IAAZ,UACE,6BAAKrD,GAAS,yCACd,cAAC,EAAD,CAAO2B,KAAMA,OAEf,cAAC,IAAD,CAAOlB,OAAK,EAAC4C,KAAK,SAAlB,SACE,cAAC,EAAD,CAAOrE,aAhCI,SAAC/B,GAAD,OAAgDF,EAAIuG,kBAAkBrG,GACxFyB,MAAK,SAACxB,GAAU,IACDqG,EAAarG,EAAnByE,KACAtE,EAAUkG,EAAVlG,MAIR,OAHAC,aAAakG,QAAQ,QAASnG,EAAMoG,QACpCnG,aAAakG,QAAQ,QAASvG,EAAMiB,OACpCgF,EAAS,gGAAD,OAAsBK,EAASG,WAAa,mCAC7C5F,QAAQ6F,aAEhBhB,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,EAAIgB,SAAW,mHAyBvC,cAAC,IAAD,CAAOP,KAAK,IAAIQ,UAAWlD,a,MC1CrCmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.50548bc6.chunk.js","sourcesContent":["class Api {\n  constructor({\n    url,\n    login,\n    user,\n    updateHouses,\n  }) {\n    this.url = url;\n    this.user = user;\n    this.updateHouses = updateHouses;\n    this.login = login;\n    this.token = localStorage.getItem('token') || '';\n    this.status = [200, 400, 401, 409];\n    this.getResponse = this.getResponse.bind(this);\n  }\n\n  getResponse(res) {\n    if (this.status.includes(res.status)) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка api: ${res.status}`));\n  }\n\n  authorizationPost({ password, email }) { // получение токена\n    return fetch(`${this.url}${this.login}`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({ password, username: email }),\n    }).then(this.getResponse);\n  }\n\n  getInfoForUser(token) {\n    return fetch(`${this.url}${this.user}`, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(this.getResponse);\n  }\n\n  getInfoUpdateUser({ company_id, page, perPage }) {\n    return fetch(`${this.url}${this.updateHouses}${company_id}/?page=${page}&perPage=${perPage}`, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        Authorization: `Bearer ${this.token}`,\n      },\n    }).then(this.getResponse);\n  }\n}\n\nconst api = new Api({\n  url: 'http://test-alpha.reestrdoma.ru/api/',\n  user: 'reestrdoma/companies/',\n  login: 'login/',\n  updateHouses: 'reestrdoma/company/houses/',\n});\n\nexport default api;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\ninterface ILogin {\n  loginHandler(login: { email: string, password: string }): Promise<void>;\n}\n\nconst Login: React.FC<ILogin> = ({ loginHandler }) => {\n  const history = useHistory();\n  const [login, setLogin] = React.useState({ email: localStorage.getItem('email') || '', password: '' });\n  const changeHandler = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    setLogin({ ...login, [evt.target.name]: evt.target.value });\n  };\n\n  const submitLogin = (evt: React.SyntheticEvent) => {\n    evt.preventDefault();\n    loginHandler(login)\n      .then(() => history.push('/'));\n  };\n\n  return (\n    <section className=\"login\">\n      <h2>Login</h2>\n      <input\n        placeholder=\"логин\"\n        name=\"email\"\n        defaultValue={login.email}\n        type=\"text\"\n        onChange={changeHandler}\n      />\n      <input\n        placeholder=\"пароль\"\n        name=\"password\"\n        defaultValue={login.password}\n        type=\"password\"\n        onChange={changeHandler}\n      />\n      <button\n        type=\"submit\"\n        title=\"отправить\"\n        onClick={submitLogin}\n      >\n        отправить\n      </button>\n    </section>\n  );\n};\n\nLogin.propTypes = {\n  loginHandler: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from '../logo.svg';\n\nconst NavBar: React.FC = () => (\n  <nav className=\"nav-bar\">\n    <img className=\"logo\" src={logo} alt=\"logo\" />\n    <ul className=\"nav-bar__links\">\n      <li className=\"nav-bar__link\">\n        <NavLink className=\"nav-bar__link\" to=\"/\" exact activeClassName=\"nav-bar__link_active\">Главная страница</NavLink>\n      </li>\n      <li className=\"nav-bar__link\">\n        <NavLink className=\"nav-bar__link\" to=\"/login\" exact activeClassName=\"nav-bar__link_active\">Авторизация</NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst NotFound: React.FC = () => {\n  const history = useHistory();\n  return (\n    <>\n      <h2>404</h2>\n      <button type=\"button\" onClick={() => history.push('/')}>на главную страницу</button>\n    </>\n  );\n};\n\nexport default NotFound;\n","function formattingDate(date: string) {\n  const dateObj = new Date(date.replace(/th|nd|st/, ''));\n  const year: string = dateObj.getFullYear().toString();\n  let month: string = (dateObj.getMonth() + 1).toString();\n  let day: string = dateObj.getDate().toString();\n\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n\n  return [day, month, year].join('.');\n}\n\nexport default formattingDate;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport api from '../utils/api';\nimport formattingDate from '../utils/formattingDate';\n\ninterface ITable {\n  data: any[]\n}\n\nconst Table: React.FC<ITable> = ({ data }) => {\n  const [userData, setUserData] = React.useState<any>([]);\n  const [infoTable, setInfoTable] = React.useState<any>([{\n    id: '',\n    address: '',\n    reestrFlatCount: '',\n    createdAt: new Date(),\n  }]);\n  const tableHandled = (evt: React.ChangeEvent<HTMLSelectElement>) => {\n    if (evt.target.value) {\n      const company = data.find((d) => d.name === evt.target.value);\n      const index = data.indexOf(company);\n      api.getInfoUpdateUser({ company_id: company.id, page: index, perPage: data.length })\n        .then((res) => setInfoTable(res.data))\n        .catch((err) => console.error(err));\n    } else {\n      setInfoTable([{\n        id: '',\n        address: '',\n        reestrFlatCount: '',\n        createdAt: new Date(),\n      }]);\n    }\n  };\n\n  React.useEffect(() => {\n    setUserData([{ id: 0, name: '' }, ...data]);\n  }, [data]);\n\n  return (\n    <section className=\"table-info\">\n      <h2>Выберите компанию:</h2>\n      <select className=\"table-select\" onChange={tableHandled}>\n        {userData.map((d: { id: string, name: string }) => (\n          <option key={d.id}>{d.name}</option>))}\n      </select>\n      <table className=\"table\">\n        <tbody>\n          <tr className=\"table__col table__coll_theme_yellow\">\n            <th className=\"table__cell\">id</th>\n            <th className=\"table__cell\">Адрес</th>\n            <th className=\"table__cell\">Номер в реестре</th>\n            <th className=\"table__cell\">Дата создания</th>\n          </tr>\n          {infoTable.map((info: {\n            id: string,\n            address: string,\n            reestrFlatCount: number,\n            createdAt: number,\n          }) => (\n            <tr key={info.id} className=\"table__col\">\n              <th className=\"table__cell\">{info.id}</th>\n              <th className=\"table__cell\">{info.address}</th>\n              <th className=\"table__cell\">{info.reestrFlatCount}</th>\n              <th className=\"table__cell\">{formattingDate(info.createdAt.toString())}</th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport api from '../utils/api';\nimport Login from './Login';\nimport NavBar from './NavBar';\nimport NotFound from './NotFound';\nimport Table from './Table';\n\nconst App: React.FC = () => {\n  const [title, setTitle] = React.useState<string>('');\n  const [data, setData] = React.useState<any>([]);\n  const loginHandler = (login: { email: string, password: string }) => api.authorizationPost(login)\n    .then((user) => {\n      const { data: dataUser } = user;\n      const { token } = dataUser;\n      localStorage.setItem('token', token.access);\n      localStorage.setItem('email', login.email);\n      setTitle(`Добро пожаловать! ${dataUser.firstName || 'Гость'}`);\n      return Promise.resolve();\n    })\n    .catch((err) => console.error(err.message || 'ошибка авторизации'));\n\n  React.useEffect(() => {\n    if (localStorage.getItem('token')) {\n      api.getInfoForUser(localStorage.getItem('token'))\n        .then((info) => {\n          setData(info.data);\n        })\n        .catch((err) => console.error(`ошибка апи ${err}`));\n    }\n  }, []);\n  return (\n    <div className=\"page\">\n      <header className=\"header\">\n        <NavBar />\n      </header>\n      <main className=\"content\">\n        <Switch>\n          <Route path=\"/\">\n            <h1>{title || 'Список'}</h1>\n            <Table data={data} />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login loginHandler={loginHandler} />\n          </Route>\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}